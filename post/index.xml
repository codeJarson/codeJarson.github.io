<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on My New Hugo Site</title>
    <link>https://codejarson.github.io/post/</link>
    <description>Recent content in Posts on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 18 Jun 2019 17:51:13 +0800</lastBuildDate>
    
	<atom:link href="https://codejarson.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>JavaScript: 总结篇</title>
      <link>https://codejarson.github.io/post/blog2/</link>
      <pubDate>Tue, 18 Jun 2019 17:51:13 +0800</pubDate>
      
      <guid>https://codejarson.github.io/post/blog2/</guid>
      <description>#JavaScript&amp;ndash;总结篇： ####&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;许久没有更新过个人博客了，来捞一手把。首先，我要好好地感谢下codeSheep羊哥和how2j.cn的站长。他们成为了我大学生涯中引路人。羊哥他所给予了我写博客的勇气，而站长所给予了我写博客的资本。 ####好了，切入正题，这一次，我通过一个how2j.cn上的一个例子，来深入了解JavaScript，DOM. 完整的JavaScript由语言基础，BOM和DOM组成。 - JavaScript：通过该语言可以实现用户与网页的交互性。 - BOM:浏览器对象模型(Browser Object Model),即一些window窗口对象，Screen客户端对象等。不重点讲。 - DOM：文档对象模式(Document Object Model),相当于Java中以面向对象的角度去看html标签。
####不多BB了，直接上图。 - ### html页面文件
####细节分析： &amp;gt;javascript:void(0)
1.该语句会使得超链接标签元素不作跳转，平常也可以 href = &amp;quot;#&amp;quot;代替。
2.注：我们在html文件中引入js文件时，通常会放到&amp;lt;head&amp;gt;标签里面且&amp;lt;/body&amp;gt;下方，是为了确保页面元素成功加载完后，在执行js文件中的代码。 没有目标，那你日复一日的敲代码为了什么？
 onclick= &amp;ldquo;sort(0)&amp;rdquo;
 为元素附上点击事件，至于sort(0),看后面js的详情。  ### css样式文件 1.为html添加样式，就如同人靠衣装，佛靠金装。 &amp;gt;border-collapse:collapse;  边框合并，相邻的框合并到一起。  js文件 &amp;emsp;实现目标： 表格排序。通过单击表格第一行的列名，使得每列按照自身排序（升序，降序） ####&amp;emsp;细节分析：
1.全局变量reverse，可以把它看做一枝旗，用于后期的判断。
2.comparator(tr1,tr2):比较器，相当于我们自定义规则，而这里的规则是取得两个tr的子列中的内容进行比较，reverse为true时，则进行降序，反之。这里的td2-td1与td2.localeCompare(td1)效果一样。
3.trs.sort(comparator):使用比较器中的规则进行排序，这里会使得每个tr的位置发生变化，所以我们才需要将发生变化后的tr重新放入tbody中。
  ###总结： &amp;emsp;&amp;emsp;JavaScript主要还是用于网页交互，通过一些事件，使得网页具有一定的动态能力。注意，JavaScript是一种直译式脚本语言。</description>
    </item>
    
    <item>
      <title>个人博客搭建</title>
      <link>https://codejarson.github.io/post/blog/</link>
      <pubDate>Mon, 17 Jun 2019 22:07:20 +0800</pubDate>
      
      <guid>https://codejarson.github.io/post/blog/</guid>
      <description>windows下搭建Hugo博客步骤如下： 1.通过https://github.com/gohugoio/hugo/releases 找到相对应得windows版本压缩文件下载（32位或64位）。 2.下载成功后。通过命令行程序（cmd），敲：  hugo version
 3.开始用Hugo搭建个人博客 输入命令：  hugo new site mytBlog（文件名）
 4.可以输入dir或在C盘下用户文件夹去找，是否有相应得文件夹myBlog（文件名） 5.进入myBlog（命令：cd myBlog） ,查看（dir）当中得内容 6.我们可以去官网下载主题 ：https://themes.gohugo.io/，如图： 7.这里我选择m10c，以他为例子，具体操作如图显示。注：前提一定要下git并且配置好！ 8.主题下载成功后如图： 9.我们可以去themes下，看看是否有该主题 10.启动博客命令，输入：  hugo server -t m10c &amp;ndash;buildDrafts
 11.输入网址 12.在根目录下创建文章： 13.我们可以使用VS Code写我们得个人博客 ， 如图： 14.再次目录下输入：  hugo server -t m10c &amp;ndash;buildDrafts ，
 并打开网址。 15.我们将博客部署到远端github上，首先创建仓库。 16.当前是一个空仓库，接下来敲命令:  hugo &amp;ndash;theme=m10c &amp;ndash;baseUrl=&amp;ldquo;地址&amp;rdquo; &amp;ndash;buildDrafts，如图：
 17.成功后根目录下会生成一个public文件夹。 git add/commit/push 素质三连 18.把这个public传到github仓库上，首先进入到public，如图所示. 19.要把本地public和远程github进行关联 20.然后还有个push命令，  git push -u origin master，期间会让你输入账号密码，输入即可，如图完成</description>
    </item>
    
  </channel>
</rss>